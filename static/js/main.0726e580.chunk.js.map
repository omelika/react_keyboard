{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","listener","event","key","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,SAAW,SAACC,GACNA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAW,2BAAD,OAA6BE,EAAMC,QAfnE,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,YAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,YAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,4BAAIF,KAAKR,MAAMC,mBAtBvB,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.0726e580.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.listener);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.listener);\n  }\n\n  listener = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ pressedKey: `The last pressed key is ${event.key}` });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>{this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}